"""
해시법: 검색 + 데이터의 추가 및 삭제에서 효율적

hashing := 데이터를 저장할 위치 = 인덱스 를 간단한 연산으로 구하는 것
-> 검색뿐 아니라 추가, 삭제도 효율적으로 수행가능

key 와 해시값(hash value)

예시)
키를 13으로 나눈 나머지가 해시값
해시 테이블에서 만들어지 원소 = 버킷(bucket)

(키를 해시값으로 변환하는 과정: hash function)

* 해시 충돌 - 저장할 버킷이 중복되는 현상
키와 해시값의 대응 관계가 1:1일 필요는 없음 (n:1)

충돌시 대처
1. 체인법 : 해시값이 같은 원소를 연결 리스트로 관리
2. 오픈 주소법 : 빈 버킷을 찾을 때까지 해시를 반복

[체인법]
해시값이 같은 데이터를 체인 모양의 연결 리스트로 연결하는 방법 (=오픈 해시법)
- 배열의 각 버킷에 저장하는 것은 인덱스를 해시값으로 하는 연결 리스트의 앞쪽 노드 참조

"""